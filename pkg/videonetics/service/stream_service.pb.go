// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.1
// source: stream_service.proto

package service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WriteFrameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel *Channel `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Frame   *Frame   `protobuf:"bytes,2,opt,name=frame,proto3" json:"frame,omitempty"`
}

func (x *WriteFrameRequest) Reset() {
	*x = WriteFrameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteFrameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteFrameRequest) ProtoMessage() {}

func (x *WriteFrameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteFrameRequest.ProtoReflect.Descriptor instead.
func (*WriteFrameRequest) Descriptor() ([]byte, []int) {
	return file_stream_service_proto_rawDescGZIP(), []int{0}
}

func (x *WriteFrameRequest) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *WriteFrameRequest) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

type WriteFrameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel *Channel `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Err     *Error   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *WriteFrameResponse) Reset() {
	*x = WriteFrameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteFrameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteFrameResponse) ProtoMessage() {}

func (x *WriteFrameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteFrameResponse.ProtoReflect.Descriptor instead.
func (*WriteFrameResponse) Descriptor() ([]byte, []int) {
	return file_stream_service_proto_rawDescGZIP(), []int{1}
}

func (x *WriteFrameResponse) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *WriteFrameResponse) GetErr() *Error {
	if x != nil {
		return x.Err
	}
	return nil
}

type ReadFrameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel *Channel `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *ReadFrameRequest) Reset() {
	*x = ReadFrameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadFrameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFrameRequest) ProtoMessage() {}

func (x *ReadFrameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFrameRequest.ProtoReflect.Descriptor instead.
func (*ReadFrameRequest) Descriptor() ([]byte, []int) {
	return file_stream_service_proto_rawDescGZIP(), []int{2}
}

func (x *ReadFrameRequest) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type ReadFrameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel *Channel `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Frame   *Frame   `protobuf:"bytes,2,opt,name=frame,proto3" json:"frame,omitempty"`
	Err     *Error   `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *ReadFrameResponse) Reset() {
	*x = ReadFrameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadFrameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFrameResponse) ProtoMessage() {}

func (x *ReadFrameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFrameResponse.ProtoReflect.Descriptor instead.
func (*ReadFrameResponse) Descriptor() ([]byte, []int) {
	return file_stream_service_proto_rawDescGZIP(), []int{3}
}

func (x *ReadFrameResponse) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *ReadFrameResponse) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

func (x *ReadFrameResponse) GetErr() *Error {
	if x != nil {
		return x.Err
	}
	return nil
}

type WriteFramePVARequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FramePva *FramePVA `protobuf:"bytes,1,opt,name=frame_pva,json=framePva,proto3" json:"frame_pva,omitempty"`
}

func (x *WriteFramePVARequest) Reset() {
	*x = WriteFramePVARequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteFramePVARequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteFramePVARequest) ProtoMessage() {}

func (x *WriteFramePVARequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteFramePVARequest.ProtoReflect.Descriptor instead.
func (*WriteFramePVARequest) Descriptor() ([]byte, []int) {
	return file_stream_service_proto_rawDescGZIP(), []int{4}
}

func (x *WriteFramePVARequest) GetFramePva() *FramePVA {
	if x != nil {
		return x.FramePva
	}
	return nil
}

type WriteFramePVAResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel *Channel `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Error   *Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *WriteFramePVAResponse) Reset() {
	*x = WriteFramePVAResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteFramePVAResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteFramePVAResponse) ProtoMessage() {}

func (x *WriteFramePVAResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteFramePVAResponse.ProtoReflect.Descriptor instead.
func (*WriteFramePVAResponse) Descriptor() ([]byte, []int) {
	return file_stream_service_proto_rawDescGZIP(), []int{5}
}

func (x *WriteFramePVAResponse) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *WriteFramePVAResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ReadFramePVARequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel *Channel `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *ReadFramePVARequest) Reset() {
	*x = ReadFramePVARequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadFramePVARequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFramePVARequest) ProtoMessage() {}

func (x *ReadFramePVARequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFramePVARequest.ProtoReflect.Descriptor instead.
func (*ReadFramePVARequest) Descriptor() ([]byte, []int) {
	return file_stream_service_proto_rawDescGZIP(), []int{6}
}

func (x *ReadFramePVARequest) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type ReadFramePVAResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FramePva *FramePVA `protobuf:"bytes,1,opt,name=frame_pva,json=framePva,proto3" json:"frame_pva,omitempty"`
	Error    *Error    `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ReadFramePVAResponse) Reset() {
	*x = ReadFramePVAResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadFramePVAResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFramePVAResponse) ProtoMessage() {}

func (x *ReadFramePVAResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFramePVAResponse.ProtoReflect.Descriptor instead.
func (*ReadFramePVAResponse) Descriptor() ([]byte, []int) {
	return file_stream_service_proto_rawDescGZIP(), []int{7}
}

func (x *ReadFramePVAResponse) GetFramePva() *FramePVA {
	if x != nil {
		return x.FramePva
	}
	return nil
}

func (x *ReadFramePVAResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type SetChannelAlterationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alteration *ChannelAlteration `protobuf:"bytes,1,opt,name=alteration,proto3" json:"alteration,omitempty"`
}

func (x *SetChannelAlterationRequest) Reset() {
	*x = SetChannelAlterationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetChannelAlterationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChannelAlterationRequest) ProtoMessage() {}

func (x *SetChannelAlterationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChannelAlterationRequest.ProtoReflect.Descriptor instead.
func (*SetChannelAlterationRequest) Descriptor() ([]byte, []int) {
	return file_stream_service_proto_rawDescGZIP(), []int{8}
}

func (x *SetChannelAlterationRequest) GetAlteration() *ChannelAlteration {
	if x != nil {
		return x.Alteration
	}
	return nil
}

type SetChannelAlterationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32 `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
}

func (x *SetChannelAlterationResponse) Reset() {
	*x = SetChannelAlterationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetChannelAlterationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChannelAlterationResponse) ProtoMessage() {}

func (x *SetChannelAlterationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChannelAlterationResponse.ProtoReflect.Descriptor instead.
func (*SetChannelAlterationResponse) Descriptor() ([]byte, []int) {
	return file_stream_service_proto_rawDescGZIP(), []int{9}
}

func (x *SetChannelAlterationResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

type GetChannelAlterationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *GetChannelAlterationRequest) Reset() {
	*x = GetChannelAlterationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelAlterationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelAlterationRequest) ProtoMessage() {}

func (x *GetChannelAlterationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelAlterationRequest.ProtoReflect.Descriptor instead.
func (*GetChannelAlterationRequest) Descriptor() ([]byte, []int) {
	return file_stream_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetChannelAlterationRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type GetChannelAlterationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alteration *ChannelAlteration `protobuf:"bytes,1,opt,name=alteration,proto3" json:"alteration,omitempty"`
	ErrCode    int32              `protobuf:"varint,2,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
}

func (x *GetChannelAlterationResponse) Reset() {
	*x = GetChannelAlterationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelAlterationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelAlterationResponse) ProtoMessage() {}

func (x *GetChannelAlterationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelAlterationResponse.ProtoReflect.Descriptor instead.
func (*GetChannelAlterationResponse) Descriptor() ([]byte, []int) {
	return file_stream_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetChannelAlterationResponse) GetAlteration() *ChannelAlteration {
	if x != nil {
		return x.Alteration
	}
	return nil
}

func (x *GetChannelAlterationResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

type WritePVADataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel *Channel `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	PvaData *PVAData `protobuf:"bytes,2,opt,name=pva_data,json=pvaData,proto3" json:"pva_data,omitempty"`
}

func (x *WritePVADataRequest) Reset() {
	*x = WritePVADataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WritePVADataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WritePVADataRequest) ProtoMessage() {}

func (x *WritePVADataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WritePVADataRequest.ProtoReflect.Descriptor instead.
func (*WritePVADataRequest) Descriptor() ([]byte, []int) {
	return file_stream_service_proto_rawDescGZIP(), []int{12}
}

func (x *WritePVADataRequest) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *WritePVADataRequest) GetPvaData() *PVAData {
	if x != nil {
		return x.PvaData
	}
	return nil
}

type WritePVADataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel *Channel `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Err     *Error   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *WritePVADataResponse) Reset() {
	*x = WritePVADataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WritePVADataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WritePVADataResponse) ProtoMessage() {}

func (x *WritePVADataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WritePVADataResponse.ProtoReflect.Descriptor instead.
func (*WritePVADataResponse) Descriptor() ([]byte, []int) {
	return file_stream_service_proto_rawDescGZIP(), []int{13}
}

func (x *WritePVADataResponse) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *WritePVADataResponse) GetErr() *Error {
	if x != nil {
		return x.Err
	}
	return nil
}

type ReadPVADataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel *Channel `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *ReadPVADataRequest) Reset() {
	*x = ReadPVADataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadPVADataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadPVADataRequest) ProtoMessage() {}

func (x *ReadPVADataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stream_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadPVADataRequest.ProtoReflect.Descriptor instead.
func (*ReadPVADataRequest) Descriptor() ([]byte, []int) {
	return file_stream_service_proto_rawDescGZIP(), []int{14}
}

func (x *ReadPVADataRequest) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type ReadPVADataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel *Channel `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	PvaData *PVAData `protobuf:"bytes,2,opt,name=pva_data,json=pvaData,proto3" json:"pva_data,omitempty"`
	Err     *Error   `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *ReadPVADataResponse) Reset() {
	*x = ReadPVADataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stream_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadPVADataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadPVADataResponse) ProtoMessage() {}

func (x *ReadPVADataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stream_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadPVADataResponse.ProtoReflect.Descriptor instead.
func (*ReadPVADataResponse) Descriptor() ([]byte, []int) {
	return file_stream_service_proto_rawDescGZIP(), []int{15}
}

func (x *ReadPVADataResponse) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *ReadPVADataResponse) GetPvaData() *PVAData {
	if x != nil {
		return x.PvaData
	}
	return nil
}

func (x *ReadPVADataResponse) GetErr() *Error {
	if x != nil {
		return x.Err
	}
	return nil
}

var File_stream_service_proto protoreflect.FileDescriptor

var file_stream_service_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6d, 0x0a, 0x11, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x28,
	0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x6a, 0x0a, 0x12, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x24,
	0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x22, 0x42, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x93, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x61,
	0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x28,
	0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x4a,
	0x0a, 0x14, 0x57, 0x72, 0x69, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x50, 0x56, 0x41, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f,
	0x70, 0x76, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x50, 0x56, 0x41,
	0x52, 0x08, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x50, 0x76, 0x61, 0x22, 0x71, 0x0a, 0x15, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x50, 0x56, 0x41, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x45, 0x0a,
	0x13, 0x52, 0x65, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x50, 0x56, 0x41, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x74, 0x0a, 0x14, 0x52, 0x65, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x50, 0x56, 0x41, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x09,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x76, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x50, 0x56, 0x41, 0x52, 0x08, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x50, 0x76, 0x61,
	0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5d, 0x0a, 0x1b, 0x53, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x61, 0x6c, 0x74,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x61,
	0x6c, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x1c, 0x53, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x3c, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x79, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x41, 0x6c, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0a, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x6c, 0x74, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x76, 0x0a,
	0x13, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x56, 0x41, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x76, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x50, 0x56, 0x41, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x76,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x22, 0x6c, 0x0a, 0x14, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x56,
	0x41, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x24, 0x0a,
	0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x22, 0x44, 0x0a, 0x12, 0x52, 0x65, 0x61, 0x64, 0x50, 0x56, 0x41, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x9c, 0x01, 0x0a, 0x13, 0x52, 0x65,
	0x61, 0x64, 0x50, 0x56, 0x41, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x76, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x50, 0x56, 0x41, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x76, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x24, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x32, 0xa4, 0x06, 0x0a, 0x0d, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x0a, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x28, 0x01, 0x12, 0x54, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x73, 0x0a, 0x14, 0x53, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2b, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x6c, 0x74,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x6c, 0x74, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41,
	0x6c, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x56, 0x41, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x56, 0x41, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50,
	0x56, 0x41, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x28, 0x01, 0x12, 0x5a, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x50, 0x56, 0x41, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x22, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x50, 0x56, 0x41, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x50, 0x56, 0x41, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x60,
	0x0a, 0x0d, 0x57, 0x72, 0x69, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x50, 0x56, 0x41, 0x12,
	0x24, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x50, 0x56, 0x41, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x50, 0x56, 0x41, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01,
	0x12, 0x5d, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x50, 0x56, 0x41,
	0x12, 0x23, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x50, 0x56, 0x41, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x50, 0x56, 0x41, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42,
	0x4e, 0x0a, 0x15, 0x69, 0x6f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x12, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x17,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0xf8, 0x01, 0x01, 0xa2, 0x02, 0x02, 0x53, 0x53, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stream_service_proto_rawDescOnce sync.Once
	file_stream_service_proto_rawDescData = file_stream_service_proto_rawDesc
)

func file_stream_service_proto_rawDescGZIP() []byte {
	file_stream_service_proto_rawDescOnce.Do(func() {
		file_stream_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_stream_service_proto_rawDescData)
	})
	return file_stream_service_proto_rawDescData
}

var file_stream_service_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_stream_service_proto_goTypes = []any{
	(*WriteFrameRequest)(nil),            // 0: stream_service.WriteFrameRequest
	(*WriteFrameResponse)(nil),           // 1: stream_service.WriteFrameResponse
	(*ReadFrameRequest)(nil),             // 2: stream_service.ReadFrameRequest
	(*ReadFrameResponse)(nil),            // 3: stream_service.ReadFrameResponse
	(*WriteFramePVARequest)(nil),         // 4: stream_service.WriteFramePVARequest
	(*WriteFramePVAResponse)(nil),        // 5: stream_service.WriteFramePVAResponse
	(*ReadFramePVARequest)(nil),          // 6: stream_service.ReadFramePVARequest
	(*ReadFramePVAResponse)(nil),         // 7: stream_service.ReadFramePVAResponse
	(*SetChannelAlterationRequest)(nil),  // 8: stream_service.SetChannelAlterationRequest
	(*SetChannelAlterationResponse)(nil), // 9: stream_service.SetChannelAlterationResponse
	(*GetChannelAlterationRequest)(nil),  // 10: stream_service.GetChannelAlterationRequest
	(*GetChannelAlterationResponse)(nil), // 11: stream_service.GetChannelAlterationResponse
	(*WritePVADataRequest)(nil),          // 12: stream_service.WritePVADataRequest
	(*WritePVADataResponse)(nil),         // 13: stream_service.WritePVADataResponse
	(*ReadPVADataRequest)(nil),           // 14: stream_service.ReadPVADataRequest
	(*ReadPVADataResponse)(nil),          // 15: stream_service.ReadPVADataResponse
	(*Channel)(nil),                      // 16: data_models.Channel
	(*Frame)(nil),                        // 17: data_models.Frame
	(*Error)(nil),                        // 18: data_models.Error
	(*FramePVA)(nil),                     // 19: data_models.FramePVA
	(*ChannelAlteration)(nil),            // 20: data_models.ChannelAlteration
	(*PVAData)(nil),                      // 21: data_models.PVAData
}
var file_stream_service_proto_depIdxs = []int32{
	16, // 0: stream_service.WriteFrameRequest.channel:type_name -> data_models.Channel
	17, // 1: stream_service.WriteFrameRequest.frame:type_name -> data_models.Frame
	16, // 2: stream_service.WriteFrameResponse.channel:type_name -> data_models.Channel
	18, // 3: stream_service.WriteFrameResponse.err:type_name -> data_models.Error
	16, // 4: stream_service.ReadFrameRequest.channel:type_name -> data_models.Channel
	16, // 5: stream_service.ReadFrameResponse.channel:type_name -> data_models.Channel
	17, // 6: stream_service.ReadFrameResponse.frame:type_name -> data_models.Frame
	18, // 7: stream_service.ReadFrameResponse.err:type_name -> data_models.Error
	19, // 8: stream_service.WriteFramePVARequest.frame_pva:type_name -> data_models.FramePVA
	16, // 9: stream_service.WriteFramePVAResponse.channel:type_name -> data_models.Channel
	18, // 10: stream_service.WriteFramePVAResponse.error:type_name -> data_models.Error
	16, // 11: stream_service.ReadFramePVARequest.channel:type_name -> data_models.Channel
	19, // 12: stream_service.ReadFramePVAResponse.frame_pva:type_name -> data_models.FramePVA
	18, // 13: stream_service.ReadFramePVAResponse.error:type_name -> data_models.Error
	20, // 14: stream_service.SetChannelAlterationRequest.alteration:type_name -> data_models.ChannelAlteration
	20, // 15: stream_service.GetChannelAlterationResponse.alteration:type_name -> data_models.ChannelAlteration
	16, // 16: stream_service.WritePVADataRequest.channel:type_name -> data_models.Channel
	21, // 17: stream_service.WritePVADataRequest.pva_data:type_name -> data_models.PVAData
	16, // 18: stream_service.WritePVADataResponse.channel:type_name -> data_models.Channel
	18, // 19: stream_service.WritePVADataResponse.err:type_name -> data_models.Error
	16, // 20: stream_service.ReadPVADataRequest.channel:type_name -> data_models.Channel
	16, // 21: stream_service.ReadPVADataResponse.channel:type_name -> data_models.Channel
	21, // 22: stream_service.ReadPVADataResponse.pva_data:type_name -> data_models.PVAData
	18, // 23: stream_service.ReadPVADataResponse.err:type_name -> data_models.Error
	0,  // 24: stream_service.StreamService.WriteFrame:input_type -> stream_service.WriteFrameRequest
	2,  // 25: stream_service.StreamService.ReadFrame:input_type -> stream_service.ReadFrameRequest
	8,  // 26: stream_service.StreamService.SetChannelAlteration:input_type -> stream_service.SetChannelAlterationRequest
	10, // 27: stream_service.StreamService.GetChannelAlteration:input_type -> stream_service.GetChannelAlterationRequest
	12, // 28: stream_service.StreamService.WritePVAData:input_type -> stream_service.WritePVADataRequest
	14, // 29: stream_service.StreamService.ReadPVAData:input_type -> stream_service.ReadPVADataRequest
	4,  // 30: stream_service.StreamService.WriteFramePVA:input_type -> stream_service.WriteFramePVARequest
	6,  // 31: stream_service.StreamService.ReadFramePVA:input_type -> stream_service.ReadFramePVARequest
	1,  // 32: stream_service.StreamService.WriteFrame:output_type -> stream_service.WriteFrameResponse
	3,  // 33: stream_service.StreamService.ReadFrame:output_type -> stream_service.ReadFrameResponse
	9,  // 34: stream_service.StreamService.SetChannelAlteration:output_type -> stream_service.SetChannelAlterationResponse
	11, // 35: stream_service.StreamService.GetChannelAlteration:output_type -> stream_service.GetChannelAlterationResponse
	13, // 36: stream_service.StreamService.WritePVAData:output_type -> stream_service.WritePVADataResponse
	15, // 37: stream_service.StreamService.ReadPVAData:output_type -> stream_service.ReadPVADataResponse
	5,  // 38: stream_service.StreamService.WriteFramePVA:output_type -> stream_service.WriteFramePVAResponse
	7,  // 39: stream_service.StreamService.ReadFramePVA:output_type -> stream_service.ReadFramePVAResponse
	32, // [32:40] is the sub-list for method output_type
	24, // [24:32] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_stream_service_proto_init() }
func file_stream_service_proto_init() {
	if File_stream_service_proto != nil {
		return
	}
	file_data_models_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_stream_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*WriteFrameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*WriteFrameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ReadFrameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ReadFrameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*WriteFramePVARequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*WriteFramePVAResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ReadFramePVARequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ReadFramePVAResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SetChannelAlterationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SetChannelAlterationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_service_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetChannelAlterationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_service_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetChannelAlterationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_service_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*WritePVADataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_service_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*WritePVADataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_service_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ReadPVADataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stream_service_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ReadPVADataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stream_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stream_service_proto_goTypes,
		DependencyIndexes: file_stream_service_proto_depIdxs,
		MessageInfos:      file_stream_service_proto_msgTypes,
	}.Build()
	File_stream_service_proto = out.File
	file_stream_service_proto_rawDesc = nil
	file_stream_service_proto_goTypes = nil
	file_stream_service_proto_depIdxs = nil
}
