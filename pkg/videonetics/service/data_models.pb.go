// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.1
// source: data_models.proto

package service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Channel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteId     int64  `protobuf:"varint,1,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty"`
	ChannelId  int64  `protobuf:"varint,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	AppId      int64  `protobuf:"varint,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	LiveOrRec  int32  `protobuf:"varint,4,opt,name=live_or_rec,json=liveOrRec,proto3" json:"live_or_rec,omitempty"`
	StreamType int32  `protobuf:"varint,5,opt,name=stream_type,json=streamType,proto3" json:"stream_type,omitempty"`
	StartTs    int64  `protobuf:"varint,6,opt,name=start_ts,json=startTs,proto3" json:"start_ts,omitempty"`
	SessionId  string `protobuf:"bytes,7,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *Channel) Reset() {
	*x = Channel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_models_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Channel) ProtoMessage() {}

func (x *Channel) ProtoReflect() protoreflect.Message {
	mi := &file_data_models_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Channel.ProtoReflect.Descriptor instead.
func (*Channel) Descriptor() ([]byte, []int) {
	return file_data_models_proto_rawDescGZIP(), []int{0}
}

func (x *Channel) GetSiteId() int64 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

func (x *Channel) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *Channel) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *Channel) GetLiveOrRec() int32 {
	if x != nil {
		return x.LiveOrRec
	}
	return 0
}

func (x *Channel) GetStreamType() int32 {
	if x != nil {
		return x.StreamType
	}
	return 0
}

func (x *Channel) GetStartTs() int64 {
	if x != nil {
		return x.StartTs
	}
	return 0
}

func (x *Channel) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type Frame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaType       int32  `protobuf:"varint,1,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`
	FrameType       int32  `protobuf:"varint,2,opt,name=frame_type,json=frameType,proto3" json:"frame_type,omitempty"`
	Timestamp       int64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Bitrate         int32  `protobuf:"varint,4,opt,name=bitrate,proto3" json:"bitrate,omitempty"`
	Fps             int32  `protobuf:"varint,5,opt,name=fps,proto3" json:"fps,omitempty"`
	MotionAvailable int32  `protobuf:"varint,6,opt,name=motion_available,json=motionAvailable,proto3" json:"motion_available,omitempty"`
	Ssrc            int32  `protobuf:"varint,7,opt,name=ssrc,proto3" json:"ssrc,omitempty"`
	FrameId         int64  `protobuf:"varint,8,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"`
	BufferSize      int64  `protobuf:"varint,9,opt,name=buffer_size,json=bufferSize,proto3" json:"buffer_size,omitempty"`
	Buffer          []byte `protobuf:"bytes,10,opt,name=buffer,proto3" json:"buffer,omitempty"`
}

func (x *Frame) Reset() {
	*x = Frame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_models_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_data_models_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_data_models_proto_rawDescGZIP(), []int{1}
}

func (x *Frame) GetMediaType() int32 {
	if x != nil {
		return x.MediaType
	}
	return 0
}

func (x *Frame) GetFrameType() int32 {
	if x != nil {
		return x.FrameType
	}
	return 0
}

func (x *Frame) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Frame) GetBitrate() int32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *Frame) GetFps() int32 {
	if x != nil {
		return x.Fps
	}
	return 0
}

func (x *Frame) GetMotionAvailable() int32 {
	if x != nil {
		return x.MotionAvailable
	}
	return 0
}

func (x *Frame) GetSsrc() int32 {
	if x != nil {
		return x.Ssrc
	}
	return 0
}

func (x *Frame) GetFrameId() int64 {
	if x != nil {
		return x.FrameId
	}
	return 0
}

func (x *Frame) GetBufferSize() int64 {
	if x != nil {
		return x.BufferSize
	}
	return 0
}

func (x *Frame) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

type ChannelAlteration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId         string  `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Command           string  `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	FrameFilter       int32   `protobuf:"varint,3,opt,name=frame_filter,json=frameFilter,proto3" json:"frame_filter,omitempty"`
	MovementFilter    int32   `protobuf:"varint,4,opt,name=movement_filter,json=movementFilter,proto3" json:"movement_filter,omitempty"`
	RecordingFilter   int32   `protobuf:"varint,5,opt,name=recording_filter,json=recordingFilter,proto3" json:"recording_filter,omitempty"`
	CriticalityFilter int32   `protobuf:"varint,6,opt,name=criticality_filter,json=criticalityFilter,proto3" json:"criticality_filter,omitempty"`
	SeekTimestamp     int64   `protobuf:"varint,7,opt,name=seek_timestamp,json=seekTimestamp,proto3" json:"seek_timestamp,omitempty"`
	Speed             float32 `protobuf:"fixed32,8,opt,name=speed,proto3" json:"speed,omitempty"`
	OriginTs          int64   `protobuf:"varint,9,opt,name=origin_ts,json=originTs,proto3" json:"origin_ts,omitempty"`
}

func (x *ChannelAlteration) Reset() {
	*x = ChannelAlteration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_models_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelAlteration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelAlteration) ProtoMessage() {}

func (x *ChannelAlteration) ProtoReflect() protoreflect.Message {
	mi := &file_data_models_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelAlteration.ProtoReflect.Descriptor instead.
func (*ChannelAlteration) Descriptor() ([]byte, []int) {
	return file_data_models_proto_rawDescGZIP(), []int{2}
}

func (x *ChannelAlteration) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ChannelAlteration) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *ChannelAlteration) GetFrameFilter() int32 {
	if x != nil {
		return x.FrameFilter
	}
	return 0
}

func (x *ChannelAlteration) GetMovementFilter() int32 {
	if x != nil {
		return x.MovementFilter
	}
	return 0
}

func (x *ChannelAlteration) GetRecordingFilter() int32 {
	if x != nil {
		return x.RecordingFilter
	}
	return 0
}

func (x *ChannelAlteration) GetCriticalityFilter() int32 {
	if x != nil {
		return x.CriticalityFilter
	}
	return 0
}

func (x *ChannelAlteration) GetSeekTimestamp() int64 {
	if x != nil {
		return x.SeekTimestamp
	}
	return 0
}

func (x *ChannelAlteration) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *ChannelAlteration) GetOriginTs() int64 {
	if x != nil {
		return x.OriginTs
	}
	return 0
}

type ObjectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X uint32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y uint32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	W uint32 `protobuf:"varint,3,opt,name=w,proto3" json:"w,omitempty"`
	H uint32 `protobuf:"varint,4,opt,name=h,proto3" json:"h,omitempty"`
	T uint32 `protobuf:"varint,5,opt,name=t,proto3" json:"t,omitempty"`
	C uint32 `protobuf:"varint,6,opt,name=c,proto3" json:"c,omitempty"`
	I int64  `protobuf:"varint,7,opt,name=i,proto3" json:"i,omitempty"`
}

func (x *ObjectInfo) Reset() {
	*x = ObjectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_models_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectInfo) ProtoMessage() {}

func (x *ObjectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_data_models_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectInfo.ProtoReflect.Descriptor instead.
func (*ObjectInfo) Descriptor() ([]byte, []int) {
	return file_data_models_proto_rawDescGZIP(), []int{3}
}

func (x *ObjectInfo) GetX() uint32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *ObjectInfo) GetY() uint32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *ObjectInfo) GetW() uint32 {
	if x != nil {
		return x.W
	}
	return 0
}

func (x *ObjectInfo) GetH() uint32 {
	if x != nil {
		return x.H
	}
	return 0
}

func (x *ObjectInfo) GetT() uint32 {
	if x != nil {
		return x.T
	}
	return 0
}

func (x *ObjectInfo) GetC() uint32 {
	if x != nil {
		return x.C
	}
	return 0
}

func (x *ObjectInfo) GetI() int64 {
	if x != nil {
		return x.I
	}
	return 0
}

type PVAData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId         string        `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	SiteId           int32         `protobuf:"varint,2,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty"`
	ChannelId        int32         `protobuf:"varint,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	TimeStamp        int64         `protobuf:"varint,4,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	TimeStampEnd     int64         `protobuf:"varint,5,opt,name=time_stamp_end,json=timeStampEnd,proto3" json:"time_stamp_end,omitempty"`
	TimeStampEncoded int64         `protobuf:"varint,6,opt,name=time_stamp_encoded,json=timeStampEncoded,proto3" json:"time_stamp_encoded,omitempty"`
	FrameId          uint64        `protobuf:"varint,7,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"`
	VehicleCount     int32         `protobuf:"varint,8,opt,name=vehicle_count,json=vehicleCount,proto3" json:"vehicle_count,omitempty"`
	PeopleCount      int32         `protobuf:"varint,9,opt,name=people_count,json=peopleCount,proto3" json:"people_count,omitempty"`
	RefWidth         int32         `protobuf:"varint,10,opt,name=ref_width,json=refWidth,proto3" json:"ref_width,omitempty"`
	RefHeight        int32         `protobuf:"varint,11,opt,name=ref_height,json=refHeight,proto3" json:"ref_height,omitempty"`
	ObjectList       []*ObjectInfo `protobuf:"bytes,12,rep,name=object_list,json=objectList,proto3" json:"object_list,omitempty"`
}

func (x *PVAData) Reset() {
	*x = PVAData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_models_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PVAData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PVAData) ProtoMessage() {}

func (x *PVAData) ProtoReflect() protoreflect.Message {
	mi := &file_data_models_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PVAData.ProtoReflect.Descriptor instead.
func (*PVAData) Descriptor() ([]byte, []int) {
	return file_data_models_proto_rawDescGZIP(), []int{4}
}

func (x *PVAData) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *PVAData) GetSiteId() int32 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

func (x *PVAData) GetChannelId() int32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *PVAData) GetTimeStamp() int64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

func (x *PVAData) GetTimeStampEnd() int64 {
	if x != nil {
		return x.TimeStampEnd
	}
	return 0
}

func (x *PVAData) GetTimeStampEncoded() int64 {
	if x != nil {
		return x.TimeStampEncoded
	}
	return 0
}

func (x *PVAData) GetFrameId() uint64 {
	if x != nil {
		return x.FrameId
	}
	return 0
}

func (x *PVAData) GetVehicleCount() int32 {
	if x != nil {
		return x.VehicleCount
	}
	return 0
}

func (x *PVAData) GetPeopleCount() int32 {
	if x != nil {
		return x.PeopleCount
	}
	return 0
}

func (x *PVAData) GetRefWidth() int32 {
	if x != nil {
		return x.RefWidth
	}
	return 0
}

func (x *PVAData) GetRefHeight() int32 {
	if x != nil {
		return x.RefHeight
	}
	return 0
}

func (x *PVAData) GetObjectList() []*ObjectInfo {
	if x != nil {
		return x.ObjectList
	}
	return nil
}

type MetaAttributeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectType           int32  `protobuf:"varint,1,opt,name=object_type,json=objectType,proto3" json:"object_type,omitempty"`
	EstimatedHeight      int32  `protobuf:"varint,2,opt,name=estimated_height,json=estimatedHeight,proto3" json:"estimated_height,omitempty"`
	TopType              string `protobuf:"bytes,3,opt,name=top_type,json=topType,proto3" json:"top_type,omitempty"`
	TopColor             string `protobuf:"bytes,4,opt,name=top_color,json=topColor,proto3" json:"top_color,omitempty"`
	BottomType           string `protobuf:"bytes,5,opt,name=bottom_type,json=bottomType,proto3" json:"bottom_type,omitempty"`
	BottomColor          string `protobuf:"bytes,6,opt,name=bottom_color,json=bottomColor,proto3" json:"bottom_color,omitempty"`
	Sex                  string `protobuf:"bytes,7,opt,name=sex,proto3" json:"sex,omitempty"`
	PresenceOfBag        string `protobuf:"bytes,8,opt,name=presence_of_bag,json=presenceOfBag,proto3" json:"presence_of_bag,omitempty"`
	ClothingPattern      string `protobuf:"bytes,9,opt,name=clothing_pattern,json=clothingPattern,proto3" json:"clothing_pattern,omitempty"`
	PresenceOfHeadDress  string `protobuf:"bytes,10,opt,name=presence_of_head_dress,json=presenceOfHeadDress,proto3" json:"presence_of_head_dress,omitempty"`
	TypeOfHeadDress      string `protobuf:"bytes,11,opt,name=type_of_head_dress,json=typeOfHeadDress,proto3" json:"type_of_head_dress,omitempty"`
	AssociatedObject     string `protobuf:"bytes,12,opt,name=associated_object,json=associatedObject,proto3" json:"associated_object,omitempty"`
	PresenceOfLongSleeve string `protobuf:"bytes,13,opt,name=presence_of_long_sleeve,json=presenceOfLongSleeve,proto3" json:"presence_of_long_sleeve,omitempty"`
	VehicleType          string `protobuf:"bytes,14,opt,name=vehicle_type,json=vehicleType,proto3" json:"vehicle_type,omitempty"`
	VehicleColor         string `protobuf:"bytes,15,opt,name=vehicle_color,json=vehicleColor,proto3" json:"vehicle_color,omitempty"`
	EventTime            int64  `protobuf:"varint,16,opt,name=event_time,json=eventTime,proto3" json:"event_time,omitempty"`
	ChannelId            int32  `protobuf:"varint,17,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	AppId                int32  `protobuf:"varint,18,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	TrackId              int32  `protobuf:"varint,19,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
	UniqueEventId        string `protobuf:"bytes,20,opt,name=unique_event_id,json=uniqueEventId,proto3" json:"unique_event_id,omitempty"`
	VehicleLicenseNumber string `protobuf:"bytes,21,opt,name=vehicle_license_number,json=vehicleLicenseNumber,proto3" json:"vehicle_license_number,omitempty"`
}

func (x *MetaAttributeEvent) Reset() {
	*x = MetaAttributeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_models_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaAttributeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaAttributeEvent) ProtoMessage() {}

func (x *MetaAttributeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_data_models_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaAttributeEvent.ProtoReflect.Descriptor instead.
func (*MetaAttributeEvent) Descriptor() ([]byte, []int) {
	return file_data_models_proto_rawDescGZIP(), []int{5}
}

func (x *MetaAttributeEvent) GetObjectType() int32 {
	if x != nil {
		return x.ObjectType
	}
	return 0
}

func (x *MetaAttributeEvent) GetEstimatedHeight() int32 {
	if x != nil {
		return x.EstimatedHeight
	}
	return 0
}

func (x *MetaAttributeEvent) GetTopType() string {
	if x != nil {
		return x.TopType
	}
	return ""
}

func (x *MetaAttributeEvent) GetTopColor() string {
	if x != nil {
		return x.TopColor
	}
	return ""
}

func (x *MetaAttributeEvent) GetBottomType() string {
	if x != nil {
		return x.BottomType
	}
	return ""
}

func (x *MetaAttributeEvent) GetBottomColor() string {
	if x != nil {
		return x.BottomColor
	}
	return ""
}

func (x *MetaAttributeEvent) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *MetaAttributeEvent) GetPresenceOfBag() string {
	if x != nil {
		return x.PresenceOfBag
	}
	return ""
}

func (x *MetaAttributeEvent) GetClothingPattern() string {
	if x != nil {
		return x.ClothingPattern
	}
	return ""
}

func (x *MetaAttributeEvent) GetPresenceOfHeadDress() string {
	if x != nil {
		return x.PresenceOfHeadDress
	}
	return ""
}

func (x *MetaAttributeEvent) GetTypeOfHeadDress() string {
	if x != nil {
		return x.TypeOfHeadDress
	}
	return ""
}

func (x *MetaAttributeEvent) GetAssociatedObject() string {
	if x != nil {
		return x.AssociatedObject
	}
	return ""
}

func (x *MetaAttributeEvent) GetPresenceOfLongSleeve() string {
	if x != nil {
		return x.PresenceOfLongSleeve
	}
	return ""
}

func (x *MetaAttributeEvent) GetVehicleType() string {
	if x != nil {
		return x.VehicleType
	}
	return ""
}

func (x *MetaAttributeEvent) GetVehicleColor() string {
	if x != nil {
		return x.VehicleColor
	}
	return ""
}

func (x *MetaAttributeEvent) GetEventTime() int64 {
	if x != nil {
		return x.EventTime
	}
	return 0
}

func (x *MetaAttributeEvent) GetChannelId() int32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *MetaAttributeEvent) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *MetaAttributeEvent) GetTrackId() int32 {
	if x != nil {
		return x.TrackId
	}
	return 0
}

func (x *MetaAttributeEvent) GetUniqueEventId() string {
	if x != nil {
		return x.UniqueEventId
	}
	return ""
}

func (x *MetaAttributeEvent) GetVehicleLicenseNumber() string {
	if x != nil {
		return x.VehicleLicenseNumber
	}
	return ""
}

type EventDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EngineTaskId     string `protobuf:"bytes,1,opt,name=engine_task_id,json=engineTaskId,proto3" json:"engine_task_id,omitempty"`
	SourceEndPointId string `protobuf:"bytes,2,opt,name=source_end_point_id,json=sourceEndPointId,proto3" json:"source_end_point_id,omitempty"`
	StartTimeStamp   int64  `protobuf:"varint,3,opt,name=start_time_stamp,json=startTimeStamp,proto3" json:"start_time_stamp,omitempty"`
	EndTimeStamp     int64  `protobuf:"varint,4,opt,name=end_time_stamp,json=endTimeStamp,proto3" json:"end_time_stamp,omitempty"`
	ZoneId           int32  `protobuf:"varint,5,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	Confidence       int32  `protobuf:"varint,6,opt,name=confidence,proto3" json:"confidence,omitempty"`
}

func (x *EventDetails) Reset() {
	*x = EventDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_models_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDetails) ProtoMessage() {}

func (x *EventDetails) ProtoReflect() protoreflect.Message {
	mi := &file_data_models_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDetails.ProtoReflect.Descriptor instead.
func (*EventDetails) Descriptor() ([]byte, []int) {
	return file_data_models_proto_rawDescGZIP(), []int{6}
}

func (x *EventDetails) GetEngineTaskId() string {
	if x != nil {
		return x.EngineTaskId
	}
	return ""
}

func (x *EventDetails) GetSourceEndPointId() string {
	if x != nil {
		return x.SourceEndPointId
	}
	return ""
}

func (x *EventDetails) GetStartTimeStamp() int64 {
	if x != nil {
		return x.StartTimeStamp
	}
	return 0
}

func (x *EventDetails) GetEndTimeStamp() int64 {
	if x != nil {
		return x.EndTimeStamp
	}
	return 0
}

func (x *EventDetails) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *EventDetails) GetConfidence() int32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

type AttributeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId                  string              `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	MetaAttributeEvent        *MetaAttributeEvent `protobuf:"bytes,2,opt,name=meta_attribute_event,json=metaAttributeEvent,proto3" json:"meta_attribute_event,omitempty"`
	CapbilitiesType           int32               `protobuf:"varint,3,opt,name=capbilities_type,json=capbilitiesType,proto3" json:"capbilities_type,omitempty"`
	EventType                 string              `protobuf:"bytes,4,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	EventDetails              *EventDetails       `protobuf:"bytes,5,opt,name=event_details,json=eventDetails,proto3" json:"event_details,omitempty"`
	EventSnaps                []string            `protobuf:"bytes,6,rep,name=event_snaps,json=eventSnaps,proto3" json:"event_snaps,omitempty"`
	ObjectStorageOrFileSystem bool                `protobuf:"varint,7,opt,name=object_storage_or_file_system,json=objectStorageOrFileSystem,proto3" json:"object_storage_or_file_system,omitempty"`
}

func (x *AttributeEvent) Reset() {
	*x = AttributeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_models_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeEvent) ProtoMessage() {}

func (x *AttributeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_data_models_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeEvent.ProtoReflect.Descriptor instead.
func (*AttributeEvent) Descriptor() ([]byte, []int) {
	return file_data_models_proto_rawDescGZIP(), []int{7}
}

func (x *AttributeEvent) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *AttributeEvent) GetMetaAttributeEvent() *MetaAttributeEvent {
	if x != nil {
		return x.MetaAttributeEvent
	}
	return nil
}

func (x *AttributeEvent) GetCapbilitiesType() int32 {
	if x != nil {
		return x.CapbilitiesType
	}
	return 0
}

func (x *AttributeEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *AttributeEvent) GetEventDetails() *EventDetails {
	if x != nil {
		return x.EventDetails
	}
	return nil
}

func (x *AttributeEvent) GetEventSnaps() []string {
	if x != nil {
		return x.EventSnaps
	}
	return nil
}

func (x *AttributeEvent) GetObjectStorageOrFileSystem() bool {
	if x != nil {
		return x.ObjectStorageOrFileSystem
	}
	return false
}

type EventSnap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Snap     string `protobuf:"bytes,2,opt,name=snap,proto3" json:"snap,omitempty"`
	SnapId   string `protobuf:"bytes,3,opt,name=snap_id,json=snapId,proto3" json:"snap_id,omitempty"`
	Image    []byte `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *EventSnap) Reset() {
	*x = EventSnap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_models_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSnap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSnap) ProtoMessage() {}

func (x *EventSnap) ProtoReflect() protoreflect.Message {
	mi := &file_data_models_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSnap.ProtoReflect.Descriptor instead.
func (*EventSnap) Descriptor() ([]byte, []int) {
	return file_data_models_proto_rawDescGZIP(), []int{8}
}

func (x *EventSnap) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *EventSnap) GetSnap() string {
	if x != nil {
		return x.Snap
	}
	return ""
}

func (x *EventSnap) GetSnapId() string {
	if x != nil {
		return x.SnapId
	}
	return ""
}

func (x *EventSnap) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

type ObjectId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectIdOld string `protobuf:"bytes,1,opt,name=object_id_old,json=objectIdOld,proto3" json:"object_id_old,omitempty"`
	ObjectIdNew string `protobuf:"bytes,2,opt,name=object_id_new,json=objectIdNew,proto3" json:"object_id_new,omitempty"`
}

func (x *ObjectId) Reset() {
	*x = ObjectId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_models_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectId) ProtoMessage() {}

func (x *ObjectId) ProtoReflect() protoreflect.Message {
	mi := &file_data_models_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectId.ProtoReflect.Descriptor instead.
func (*ObjectId) Descriptor() ([]byte, []int) {
	return file_data_models_proto_rawDescGZIP(), []int{9}
}

func (x *ObjectId) GetObjectIdOld() string {
	if x != nil {
		return x.ObjectIdOld
	}
	return ""
}

func (x *ObjectId) GetObjectIdNew() string {
	if x != nil {
		return x.ObjectIdNew
	}
	return ""
}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId  string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password  string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	SecretKey string `protobuf:"bytes,4,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	Roles     string `protobuf:"bytes,5,opt,name=roles,proto3" json:"roles,omitempty"`
	Token     string `protobuf:"bytes,6,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_models_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_data_models_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_data_models_proto_rawDescGZIP(), []int{10}
}

func (x *Account) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *Account) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Account) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Account) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *Account) GetRoles() string {
	if x != nil {
		return x.Roles
	}
	return ""
}

func (x *Account) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type CapabilitiesType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId         string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Name             string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CapabilitiesType string `protobuf:"bytes,3,opt,name=capabilities_type,json=capabilitiesType,proto3" json:"capabilities_type,omitempty"`
}

func (x *CapabilitiesType) Reset() {
	*x = CapabilitiesType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_models_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CapabilitiesType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapabilitiesType) ProtoMessage() {}

func (x *CapabilitiesType) ProtoReflect() protoreflect.Message {
	mi := &file_data_models_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapabilitiesType.ProtoReflect.Descriptor instead.
func (*CapabilitiesType) Descriptor() ([]byte, []int) {
	return file_data_models_proto_rawDescGZIP(), []int{11}
}

func (x *CapabilitiesType) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *CapabilitiesType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CapabilitiesType) GetCapabilitiesType() string {
	if x != nil {
		return x.CapabilitiesType
	}
	return ""
}

type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index      int64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	MaxResults int64 `protobuf:"varint,2,opt,name=max_results,json=maxResults,proto3" json:"max_results,omitempty"`
	Total      int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_models_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_data_models_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_data_models_proto_rawDescGZIP(), []int{12}
}

func (x *Meta) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Meta) GetMaxResults() int64 {
	if x != nil {
		return x.MaxResults
	}
	return 0
}

func (x *Meta) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ExitCode int64  `protobuf:"varint,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_models_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_data_models_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_data_models_proto_rawDescGZIP(), []int{13}
}

func (x *Error) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Error) GetExitCode() int64 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

type VVideoClip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ChannelId         int32  `protobuf:"varint,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	MediaServerId     string `protobuf:"bytes,3,opt,name=media_server_id,json=mediaServerId,proto3" json:"media_server_id,omitempty"`
	StartTimestamp    int64  `protobuf:"varint,4,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"`
	EndTimestamp      int64  `protobuf:"varint,5,opt,name=end_timestamp,json=endTimestamp,proto3" json:"end_timestamp,omitempty"`
	ClipSize          int64  `protobuf:"varint,6,opt,name=clip_size,json=clipSize,proto3" json:"clip_size,omitempty"`
	ClipUrl           string `protobuf:"bytes,7,opt,name=clip_url,json=clipUrl,proto3" json:"clip_url,omitempty"`
	ParallelClipUrl   string `protobuf:"bytes,8,opt,name=parallel_clip_url,json=parallelClipUrl,proto3" json:"parallel_clip_url,omitempty"`
	JunkFlag          int32  `protobuf:"varint,9,opt,name=junk_flag,json=junkFlag,proto3" json:"junk_flag,omitempty"`
	DontDelete        int32  `protobuf:"varint,10,opt,name=dont_delete,json=dontDelete,proto3" json:"dont_delete,omitempty"`
	IncidentBookmark  int32  `protobuf:"varint,11,opt,name=incident_bookmark,json=incidentBookmark,proto3" json:"incident_bookmark,omitempty"`
	DrFileFatchStatus int32  `protobuf:"varint,12,opt,name=dr_file_fatch_status,json=drFileFatchStatus,proto3" json:"dr_file_fatch_status,omitempty"`
	SecondaryId       int64  `protobuf:"varint,13,opt,name=secondary_id,json=secondaryId,proto3" json:"secondary_id,omitempty"`
	BackupState       int32  `protobuf:"varint,14,opt,name=backup_state,json=backupState,proto3" json:"backup_state,omitempty"`
	StoragePath       string `protobuf:"bytes,15,opt,name=storage_path,json=storagePath,proto3" json:"storage_path,omitempty"`
	StreamAndClipMode int32  `protobuf:"varint,16,opt,name=stream_and_clip_mode,json=streamAndClipMode,proto3" json:"stream_and_clip_mode,omitempty"`
}

func (x *VVideoClip) Reset() {
	*x = VVideoClip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_models_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VVideoClip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VVideoClip) ProtoMessage() {}

func (x *VVideoClip) ProtoReflect() protoreflect.Message {
	mi := &file_data_models_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VVideoClip.ProtoReflect.Descriptor instead.
func (*VVideoClip) Descriptor() ([]byte, []int) {
	return file_data_models_proto_rawDescGZIP(), []int{14}
}

func (x *VVideoClip) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VVideoClip) GetChannelId() int32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *VVideoClip) GetMediaServerId() string {
	if x != nil {
		return x.MediaServerId
	}
	return ""
}

func (x *VVideoClip) GetStartTimestamp() int64 {
	if x != nil {
		return x.StartTimestamp
	}
	return 0
}

func (x *VVideoClip) GetEndTimestamp() int64 {
	if x != nil {
		return x.EndTimestamp
	}
	return 0
}

func (x *VVideoClip) GetClipSize() int64 {
	if x != nil {
		return x.ClipSize
	}
	return 0
}

func (x *VVideoClip) GetClipUrl() string {
	if x != nil {
		return x.ClipUrl
	}
	return ""
}

func (x *VVideoClip) GetParallelClipUrl() string {
	if x != nil {
		return x.ParallelClipUrl
	}
	return ""
}

func (x *VVideoClip) GetJunkFlag() int32 {
	if x != nil {
		return x.JunkFlag
	}
	return 0
}

func (x *VVideoClip) GetDontDelete() int32 {
	if x != nil {
		return x.DontDelete
	}
	return 0
}

func (x *VVideoClip) GetIncidentBookmark() int32 {
	if x != nil {
		return x.IncidentBookmark
	}
	return 0
}

func (x *VVideoClip) GetDrFileFatchStatus() int32 {
	if x != nil {
		return x.DrFileFatchStatus
	}
	return 0
}

func (x *VVideoClip) GetSecondaryId() int64 {
	if x != nil {
		return x.SecondaryId
	}
	return 0
}

func (x *VVideoClip) GetBackupState() int32 {
	if x != nil {
		return x.BackupState
	}
	return 0
}

func (x *VVideoClip) GetStoragePath() string {
	if x != nil {
		return x.StoragePath
	}
	return ""
}

func (x *VVideoClip) GetStreamAndClipMode() int32 {
	if x != nil {
		return x.StreamAndClipMode
	}
	return 0
}

type ChannelClipId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId        int32 `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	LastSyncedClipId int32 `protobuf:"varint,2,opt,name=last_synced_clip_id,json=lastSyncedClipId,proto3" json:"last_synced_clip_id,omitempty"`
}

func (x *ChannelClipId) Reset() {
	*x = ChannelClipId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_models_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelClipId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelClipId) ProtoMessage() {}

func (x *ChannelClipId) ProtoReflect() protoreflect.Message {
	mi := &file_data_models_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelClipId.ProtoReflect.Descriptor instead.
func (*ChannelClipId) Descriptor() ([]byte, []int) {
	return file_data_models_proto_rawDescGZIP(), []int{15}
}

func (x *ChannelClipId) GetChannelId() int32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *ChannelClipId) GetLastSyncedClipId() int32 {
	if x != nil {
		return x.LastSyncedClipId
	}
	return 0
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val int32 `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_models_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_data_models_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_data_models_proto_rawDescGZIP(), []int{16}
}

func (x *Status) GetVal() int32 {
	if x != nil {
		return x.Val
	}
	return 0
}

type FramePVA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel *Channel `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Frame   *Frame   `protobuf:"bytes,2,opt,name=frame,proto3" json:"frame,omitempty"`
	Pva     *PVAData `protobuf:"bytes,3,opt,name=pva,proto3" json:"pva,omitempty"`
	Status  *Status  `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *FramePVA) Reset() {
	*x = FramePVA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_models_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FramePVA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FramePVA) ProtoMessage() {}

func (x *FramePVA) ProtoReflect() protoreflect.Message {
	mi := &file_data_models_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FramePVA.ProtoReflect.Descriptor instead.
func (*FramePVA) Descriptor() ([]byte, []int) {
	return file_data_models_proto_rawDescGZIP(), []int{17}
}

func (x *FramePVA) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *FramePVA) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

func (x *FramePVA) GetPva() *PVAData {
	if x != nil {
		return x.Pva
	}
	return nil
}

func (x *FramePVA) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_data_models_proto protoreflect.FileDescriptor

var file_data_models_proto_rawDesc = []byte{
	0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x22, 0xd3, 0x01, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x6c,
	0x69, 0x76, 0x65, 0x5f, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x52, 0x65, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xa2, 0x02, 0x0a, 0x05, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62,
	0x69, 0x74, 0x72, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x70, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x66, 0x70, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x73, 0x72, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x73, 0x72, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x22, 0xcc, 0x02, 0x0a, 0x11,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x27, 0x0a,
	0x0f, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63,
	0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x65, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x65, 0x65, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x54, 0x73, 0x22, 0x6e, 0x0a, 0x0a, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x01, 0x77, 0x12, 0x0c, 0x0a, 0x01, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x68,
	0x12, 0x0c, 0x0a, 0x01, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x74, 0x12, 0x0c,
	0x0a, 0x01, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x63, 0x12, 0x0c, 0x0a, 0x01,
	0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x69, 0x22, 0xaa, 0x03, 0x0a, 0x07, 0x50,
	0x56, 0x41, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x45, 0x6e, 0x64,
	0x12, 0x2c, 0x0a, 0x12, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x65,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x74, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x66, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x66, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x66, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x38, 0x0a,
	0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x9d, 0x06, 0x0a, 0x12, 0x4d, 0x65, 0x74, 0x61,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x65, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f,
	0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6f, 0x74, 0x74, 0x6f,
	0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x4f, 0x66, 0x42, 0x61, 0x67,
	0x12, 0x29, 0x0a, 0x10, 0x63, 0x6c, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6c, 0x6f, 0x74,
	0x68, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x33, 0x0a, 0x16, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x5f,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x63, 0x65, 0x4f, 0x66, 0x48, 0x65, 0x61, 0x64, 0x44, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x2b, 0x0a, 0x12, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x68, 0x65, 0x61, 0x64,
	0x5f, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x79,
	0x70, 0x65, 0x4f, 0x66, 0x48, 0x65, 0x61, 0x64, 0x44, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a,
	0x11, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x74, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x73,
	0x6c, 0x65, 0x65, 0x76, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x63, 0x65, 0x4f, 0x66, 0x4c, 0x6f, 0x6e, 0x67, 0x53, 0x6c, 0x65, 0x65, 0x76,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x34, 0x0a, 0x16, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xec, 0x01, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x2d,
	0x0a, 0x13, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x17, 0x0a,
	0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x22, 0xed, 0x02, 0x0a, 0x0e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x14, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x12, 0x6d, 0x65, 0x74, 0x61, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x61, 0x70,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x61, 0x70, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x12, 0x40, 0x0a, 0x1d, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x72, 0x46, 0x69, 0x6c, 0x65,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0x6b, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53,
	0x6e, 0x61, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6e, 0x61, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x6e, 0x61, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6e, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6e, 0x61, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x22, 0x52, 0x0a, 0x08, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0d, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x6c, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x4f, 0x6c, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x5f, 0x6e, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x4e, 0x65, 0x77, 0x22, 0xa9, 0x01, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x70, 0x0a, 0x10, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x22, 0x53, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x52, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xcb,
	0x04, 0x0a, 0x0a, 0x56, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6c, 0x69, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x70, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6c, 0x69, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61,
	0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x43,
	0x6c, 0x69, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x75, 0x6e, 0x6b, 0x5f, 0x66,
	0x6c, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6a, 0x75, 0x6e, 0x6b, 0x46,
	0x6c, 0x61, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x6f, 0x6e, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x2f, 0x0a, 0x14, 0x64, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x66, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x11, 0x64, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x61, 0x72, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2f, 0x0a, 0x14, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x41, 0x6e, 0x64, 0x43, 0x6c, 0x69, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x5d, 0x0a, 0x0d,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6c, 0x69, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x13,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x63, 0x6c, 0x69, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x53,
	0x79, 0x6e, 0x63, 0x65, 0x64, 0x43, 0x6c, 0x69, 0x70, 0x49, 0x64, 0x22, 0x1a, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0xb9, 0x01, 0x0a, 0x08, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x50, 0x56, 0x41, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x03, 0x70, 0x76, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x50, 0x56, 0x41, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x03, 0x70, 0x76, 0x61, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x48, 0x0a, 0x12, 0x69, 0x6f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x42, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x17, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0xf8, 0x01, 0x01, 0xa2, 0x02, 0x02, 0x44, 0x4d, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_data_models_proto_rawDescOnce sync.Once
	file_data_models_proto_rawDescData = file_data_models_proto_rawDesc
)

func file_data_models_proto_rawDescGZIP() []byte {
	file_data_models_proto_rawDescOnce.Do(func() {
		file_data_models_proto_rawDescData = protoimpl.X.CompressGZIP(file_data_models_proto_rawDescData)
	})
	return file_data_models_proto_rawDescData
}

var file_data_models_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_data_models_proto_goTypes = []any{
	(*Channel)(nil),            // 0: data_models.Channel
	(*Frame)(nil),              // 1: data_models.Frame
	(*ChannelAlteration)(nil),  // 2: data_models.ChannelAlteration
	(*ObjectInfo)(nil),         // 3: data_models.ObjectInfo
	(*PVAData)(nil),            // 4: data_models.PVAData
	(*MetaAttributeEvent)(nil), // 5: data_models.MetaAttributeEvent
	(*EventDetails)(nil),       // 6: data_models.EventDetails
	(*AttributeEvent)(nil),     // 7: data_models.AttributeEvent
	(*EventSnap)(nil),          // 8: data_models.EventSnap
	(*ObjectId)(nil),           // 9: data_models.ObjectId
	(*Account)(nil),            // 10: data_models.Account
	(*CapabilitiesType)(nil),   // 11: data_models.CapabilitiesType
	(*Meta)(nil),               // 12: data_models.Meta
	(*Error)(nil),              // 13: data_models.Error
	(*VVideoClip)(nil),         // 14: data_models.VVideoClip
	(*ChannelClipId)(nil),      // 15: data_models.ChannelClipId
	(*Status)(nil),             // 16: data_models.Status
	(*FramePVA)(nil),           // 17: data_models.FramePVA
}
var file_data_models_proto_depIdxs = []int32{
	3,  // 0: data_models.PVAData.object_list:type_name -> data_models.ObjectInfo
	5,  // 1: data_models.AttributeEvent.meta_attribute_event:type_name -> data_models.MetaAttributeEvent
	6,  // 2: data_models.AttributeEvent.event_details:type_name -> data_models.EventDetails
	0,  // 3: data_models.FramePVA.channel:type_name -> data_models.Channel
	1,  // 4: data_models.FramePVA.frame:type_name -> data_models.Frame
	4,  // 5: data_models.FramePVA.pva:type_name -> data_models.PVAData
	16, // 6: data_models.FramePVA.status:type_name -> data_models.Status
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_data_models_proto_init() }
func file_data_models_proto_init() {
	if File_data_models_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_data_models_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Channel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_models_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Frame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_models_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ChannelAlteration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_models_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ObjectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_models_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*PVAData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_models_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*MetaAttributeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_models_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*EventDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_models_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*AttributeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_models_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*EventSnap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_models_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ObjectId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_models_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_models_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CapabilitiesType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_models_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_models_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_models_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*VVideoClip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_models_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ChannelClipId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_models_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_models_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*FramePVA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_data_models_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_data_models_proto_goTypes,
		DependencyIndexes: file_data_models_proto_depIdxs,
		MessageInfos:      file_data_models_proto_msgTypes,
	}.Build()
	File_data_models_proto = out.File
	file_data_models_proto_rawDesc = nil
	file_data_models_proto_goTypes = nil
	file_data_models_proto_depIdxs = nil
}
